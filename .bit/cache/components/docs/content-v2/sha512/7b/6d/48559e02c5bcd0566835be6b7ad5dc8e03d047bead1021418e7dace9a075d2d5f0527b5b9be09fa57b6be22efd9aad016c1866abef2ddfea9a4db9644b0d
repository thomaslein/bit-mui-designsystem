[{"name":"","description":"The Drawer can be cancelled by clicking the overlay or pressing the Esc key.\nIt closes when an item is selected, handled by controlling the open prop.","args":[],"returns":{},"access":"public","examples":[],"render":"","properties":[],"static":false,"filePath":"drawer.composition.tsx"},{"name":"","description":"Use the anchor prop to specify which side of the screen the Drawer should originate from.\nThe default value is left.","args":[],"returns":{},"access":"public","examples":[],"render":"","properties":[],"static":false,"filePath":"drawer.composition.tsx"},{"name":"","description":"You can make the drawer swipeable with the SwipeableDrawer component.\nThis component comes with a 2 kB gzipped payload overhead.\nSome low-end mobile devices won't be able to follow the fingers at 60 FPS. You can use the `disableBackdropTransition` prop to help.","args":[],"returns":{},"access":"public","examples":[],"render":"","properties":[],"static":false,"filePath":"drawer.composition.tsx"},{"name":"","description":"You can configure the SwipeableDrawer to have a visible edge when closed.\nIf you are on a desktop, you can toggle the drawer with the \"OPEN\" button.\nIf you are on mobile, you can open the demo in CodeSandbox (\"edit\" icon) and swipe.","args":[],"returns":{},"access":"public","examples":[],"render":"","properties":[],"static":false,"filePath":"drawer.composition.tsx"},{"name":"","description":"Injected by the documentation to work in an iframe.\nYou won't need it on your project.","args":[],"returns":{},"access":"public","examples":[],"render":"","properties":[],"static":false,"filePath":"drawer.composition.tsx"},{"name":"","description":"You can use the temporary variant to display a drawer for small screens and permanent for a drawer for wider screens.","args":[],"returns":{},"access":"public","examples":[],"render":"","properties":[],"static":false,"filePath":"drawer.composition.tsx"}]