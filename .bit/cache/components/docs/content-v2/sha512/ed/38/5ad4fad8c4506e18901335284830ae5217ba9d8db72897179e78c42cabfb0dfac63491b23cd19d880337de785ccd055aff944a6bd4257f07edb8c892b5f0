[{"filePath":"snackbar.tsx","name":"Snackbar","description":"","properties":[{"name":"action","description":"The action to display. It renders after the message, at the end of the snackbar.","required":false,"type":"SnackbarContentProps['action']"},{"name":"anchorOrigin","description":"{ vertical: 'bottom', horizontal: 'left' }","required":false,"type":"SnackbarOrigin"},{"name":"autoHideDuration","description":"null","required":false,"type":"number | null"},{"name":"children","description":"Replace the `SnackbarContent` component.","required":false,"type":"ReactReactElement"},{"name":"classes","description":"Override or extend the styles applied to the component.","required":false,"type":"Partial"},{"name":"ClickAwayListenerProps","description":"Props applied to the `ClickAwayListener` element.","required":false,"type":"Partial"},{"name":"ContentProps","description":"Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.","required":false,"type":"Partial"},{"name":"disableWindowBlurListener","description":"false","required":false,"type":"boolean"},{"name":"key","description":"When displaying multiple consecutive snackbars using a single parent-rendered\n`<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.\nFor instance, use `<Snackbar key={message} />`. Otherwise, messages might update\nin place, and features like `autoHideDuration` could be affected.","required":false,"type":"any"},{"name":"message","description":"The message to display.","required":false,"type":"SnackbarContentProps['message']"},{"name":"onClose","description":"The event source of the callback.","required":false,"type":"signature"},{"name":"open","description":"If `true`, the component is shown.","required":false,"type":"boolean"},{"name":"resumeHideDuration","description":"The number of milliseconds to wait before dismissing after user interaction.\nIf `autoHideDuration` prop isn't specified, it does nothing.\nIf `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\nwe default to `autoHideDuration / 2` ms.","required":false,"type":"number"},{"name":"sx","description":"The system prop that allows defining system overrides as well as additional CSS styles.","required":false,"type":"SxProps"},{"name":"className","description":"A custom className to apply to the root component.","required":false,"type":"string"}],"access":"public","methods":[],"args":[],"examples":[]}]