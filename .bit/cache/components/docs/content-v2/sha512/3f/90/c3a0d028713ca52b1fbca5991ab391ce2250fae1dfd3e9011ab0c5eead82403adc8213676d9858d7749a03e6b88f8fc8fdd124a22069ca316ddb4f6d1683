[{"filePath":"step.tsx","name":"Step","description":"","properties":[{"name":"active","description":"Sets the step as active. Is passed to child components.","required":false,"type":"boolean"},{"name":"children","description":"Should be `Step` sub-components such as `StepLabel`, `StepContent`.","required":false,"type":"ReactReactNode"},{"name":"classes","description":"Override or extend the styles applied to the component.","required":false,"type":"Partial"},{"name":"completed","description":"Mark the step as completed. Is passed to child components.","required":false,"type":"boolean"},{"name":"disabled","description":"If `true`, the step is disabled, will also disable the button if\n`StepButton` is a child of `Step`. Is passed to child components.","required":false,"type":"boolean"},{"name":"expanded","description":"false","required":false,"type":"boolean"},{"name":"index","description":"The position of the step.\nThe prop defaults to the value inherited from the parent Stepper component.","required":false,"type":"number"},{"name":"last","description":"If `true`, the Step is displayed as rendered last.\nThe prop defaults to the value inherited from the parent Stepper component.","required":false,"type":"boolean"},{"name":"sx","description":"The system prop that allows defining system overrides as well as additional CSS styles.","required":false,"type":"SxProps"},{"name":"className","description":"A custom className to apply to the root element.","required":false,"type":"string"}],"access":"public","methods":[],"args":[],"examples":[]}]