[{"filePath":"select.tsx","name":"Select","description":"","properties":[{"name":"autoWidth","description":"false","required":false,"type":"boolean"},{"name":"children","description":"The option elements to populate the select with.\nCan be some `MenuItem` when `native` is false and `option` when `native` is true.\n\n⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.","required":false,"type":"ReactReactNode"},{"name":"classes","description":"{}","required":false,"type":"Partial"},{"name":"defaultOpen","description":"false","required":false,"type":"boolean"},{"name":"defaultValue","description":"The default value. Use when the component is not controlled.","required":false,"type":"Value"},{"name":"displayEmpty","description":"false","required":false,"type":"boolean"},{"name":"IconComponent","description":"ArrowDropDownIcon","required":false,"type":"ReactElementType"},{"name":"id","description":"The `id` of the wrapper element or the `select` element when `native`.","required":false,"type":"string"},{"name":"input","description":"An `Input` element; does not have to be a material-ui specific `Input`.","required":false,"type":"ReactReactElement"},{"name":"inputProps","description":"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\nWhen `native` is `true`, the attributes are applied on the `select` element.","required":false,"type":"InputProps['inputProps']"},{"name":"label","description":"See [OutlinedInput#label](/material-ui/api/outlined-input/#props)","required":false,"type":"ReactReactNode"},{"name":"labelId","description":"The ID of an element that acts as an additional label. The Select will\nbe labelled by the additional label and the selected value.","required":false,"type":"string"},{"name":"MenuProps","description":"Props applied to the [`Menu`](/material-ui/api/menu/) element.","required":false,"type":"Partial"},{"name":"multiple","description":"false","required":false,"type":"boolean"},{"name":"native","description":"false","required":false,"type":"boolean"},{"name":"onChange","description":"The event source of the callback.\nYou can pull out the new value by accessing `event.target.value` (any).\n*Warning**: This is a generic event, not a change event, unless the change event is caused by browser autofill.","required":false,"type":"SelectInputProps['onChange']"},{"name":"onClose","description":"The event source of the callback.","required":false,"type":"signature"},{"name":"onOpen","description":"The event source of the callback.","required":false,"type":"signature"},{"name":"open","description":"If `true`, the component is shown.\nYou can only use it when the `native` prop is `false` (default).","required":false,"type":"boolean"},{"name":"renderValue","description":"The `value` provided to the component.","required":false,"type":"signature"},{"name":"SelectDisplayProps","description":"Props applied to the clickable div element.","required":false,"type":"ReactHTMLAttributes"},{"name":"sx","description":"The system prop that allows defining system overrides as well as additional CSS styles.","required":false,"type":"SxProps"},{"name":"value","description":"The `input` value. Providing an empty string will select no options.\nSet to an empty string `''` if you don't want any of the available options to be selected.\n\nIf the value is an object it must have reference equality with the option in order to be selected.\nIf the value is not an object, the string representation must match with the string representation of the option in order to be selected.","required":false,"type":"Value | ''"},{"name":"className","description":"A custom className to apply to the component.","required":false,"type":"string"}],"access":"public","methods":[],"args":[],"examples":[]}]